
// Fix hot-toast not having style
@use 'node_modules/@ngneat/hot-toast/src/styles/styles.scss';

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@import "~@fortawesome/fontawesome-free/css/all.css";
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
/* Add application styles & imports to this file! */
@import 'swiper/swiper-bundle';
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$gamevault-primary: mat.define-palette(mat.$indigo-palette);
$gamevault-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$gamevault-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$gamevault-theme: mat.define-light-theme((
  color: (
    primary: $gamevault-primary,
    accent: $gamevault-accent,
    warn: $gamevault-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($gamevault-theme);

/* You can add global styles to this file, and also import other style files */

body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }


@font-face {
  font-family: 'Azonix Regular';
  src: url('assets/fonts/Azonix.otf');
  }

body {
    background: #3d3e4e;
}

html {
  scroll-behavior: smooth;
}
/* globális stíluslap */



/* Az animációhoz tartozó egyedi CSS class */
$vaultdoorlockszin: #ffffff;
$vaulddoorpistonszin:rgb(238, 195, 68);
$vaultdoorlockhandleszin:rgb(241, 199, 72);
$meret: 1;
.vault-door-outer {
  
  position:fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  background:rgba(0, 0, 0, 0);
  animation-name: loading-slide-in-out;
  animation-duration: 2s;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
  z-index: 9989;
  padding-top: 10vh;
  .vault-door-inner {
    position:absolute;
    margin:52px *$meret;
    width:390px*$meret;
    height:390px*$meret;
    background:rgba(0, 0, 0, 0);
    border-radius:25%;
    
    
    
    .vault-door-lock-wrapper {
      position:absolute;
      width:190px*$meret;
      height:190px*$meret;
    }
    
    .vault-door-lock {
      background:$vaultdoorlockszin;
    }
    
    .vault-door-circle {
      position:absolute;
      width:310px*$meret;
      height:310px*$meret;
      margin:40px*$meret;
      border-radius:50%;
      z-index: 9995;
    }
    
    .vault-door-pistons {
      position:absolute;
      width:340px*$meret;
      height:340px*$meret;
      margin:180px*$meret 25px*$meret;
      background:none;
      
      .piston {
        position:absolute;
        background:$vaulddoorpistonszin;
        width:340px*$meret;
        height:30px*$meret;
        border-radius:8px;
        transition:all .05s ease-out;
        
        &.piston2{
          transform:rotate(45deg);
        }
        &.piston3{
          transform:rotate(90deg);
        }
        &.piston4{
          transform:rotate(135deg);
        }
      }
    }
    
    
    
    
    
    .vault-door-handle {
      position:absolute;
      border:solid 23px $vaultdoorlockhandleszin;
      width:140px*$meret;
      height:140px*$meret;
      margin:102px*$meret;
      border-radius:50%;
      transition:all .3s ease-in-out;
      
      .handle-bar {
        position:absolute;
        background:$vaultdoorlockhandleszin;
        height:22px*$meret;
        width:140px*$meret;
        margin:59px*$meret 0*$meret;
        
        &.bar1 {
          transform:rotate(45deg);
        }
        
        &.bar2 {
          transform:rotate(135deg);
        }
      }
    }
  }
  
  &.vault-door-outer {
    .vault-door-lock-shadow {
      width:300px*$meret;
      margin:150px*$meret 90px*$meret;
      transition:all .2s ease-out;
    }
    .piston {
      width:310px*$meret;
      margin-left:15px*$meret;
      margin-right:15px*$meret;
      transition:all .2s ease-out;
    }
    .vault-door-handle {
      transform:rotate(-180deg);
      transition:all .7s ease-in-out;
    }
  }
}





.piston {
  position:relative;
  background:$vaulddoorpistonszin;
  width:340px*$meret;
  height:30px*$meret;
  border-radius:8px;
  animation: piston 2s 4 ease-out;
  z-index: 9990;
}

@keyframes piston {
  0% {
    width: 340px*$meret;
    margin-left: 0px;
    margin-right: 0px;
  }
  50% {
    width: 310px*$meret;
    margin-left: 15px*$meret;
    margin-right: 15px*$meret;
  }
  100% {
    width: 340px*$meret;
    margin-left: 0px;
    margin-right: 0px;
  }
}

.vault-door-handle {
  position:absolute;
  border:solid 23px $vaultdoorlockhandleszin;
  width:140px*$meret;
  height:140px*$meret;
  margin:102px*$meret;
  border-radius:50%;
  animation: handle 2s 4 ease-in-out;
  z-index: 9995;
}

@keyframes handle {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(-90deg);
  }
  100% {
    transform: rotate(-180deg);
  }
}



.loading-screen {
  position: fixed;
  overflow: none;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9988;
  background-color: #1c1d27;
  animation-name: loading-slide-in-out;
  animation-duration: 2s;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
}

.mat-mdc-text-field-wrapper{ 
  background-color: #1c1d276b !important;
}
.ng-trigger-transformPanel{
  background-color: #313242 !important;
}


.loading-screen2 {
  position: fixed;
  overflow: none;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9987;
  background-color: rgb(255,214,92);
  animation-name: loading-slide-in-out2;
  animation-duration: 2s;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
}
.loading-screen3 {
  position: fixed;
  overflow: none;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9986;
  background-color: #1c1d27;
  animation-name: loading-slide-in-out3;
  animation-duration: 2s;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
}

.palceholder-screen{
  position: fixed;
  overflow: none;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9985;
  background: #3d3e4e;
  animation: fade-in 2s ease-in;
  animation-timing-function: ease-in-out;
  animation-fill-mode: forwards;
  background-image: radial-gradient(
    rgba(255, 255, 255, 0.1) 10%, 
    transparent 10%
  );
  
  background-position: 0% 0%;
  background-size: 1vmin 1vmin; //Size
}

@keyframes fade-in {
  0% {
    opacity: 1;
  }
  30% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/* Az animáció */
@keyframes loading-slide-in-out3 {
  0% {
    transform: translateX(-100%);
  }
  20% {
    transform: translateX(0%);
  }
  80%{
    transform: translateX(0%);
  }
  100% {
    transform: translateX(-100%);
  }
}
/* Az animáció */
@keyframes loading-slide-in-out2 {
  0% {
    transform: translateX(-100%);
  }
  25% {
    transform: translateX(0%);
  }
  75%{
    transform: translateX(0%);
  }
  100% {
    transform: translateX(-100%);
  }
}
/* Az animáció */
@keyframes loading-slide-in-out {
  0% {
    transform: translateX(-100%);
  }
  30% {
    transform: translateX(0%);
  }
  70%{
    transform: translateX(0%);
  }
  100% {
    transform: translateX(-100%);
  }
}
//Háttérbeli kis pöttyök
body{
    background-image: radial-gradient(
    rgba(255, 255, 255, 0.1) 10%, 
    transparent 10%
  );
  
  background-position: 0% 0%;
  background-size: 1vmin 1vmin; //Size
  height: 100vh;

  left: 0px;
  position: relative;
  top: 0px;
  width: 100vw;
  z-index: -1;
}
.leugro-menu .mat-menu-content {
  border-radius: 0;
}
::ng-deep .mat-menu-panel {
  border-radius: 0;
}

::ng-deep .mat-menu-content {
  border-radius: 0;
}
body, html{
  width: 100%;
  min-height: 100vh;
  height: auto;
}
.title {
  font-weight: 900;
  font-size: 20vh;
  letter-spacing: 0.05em;
  text-align: center;
}

.container {
  position: absolute;
  top: 20%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.game {
  font-family: 'Azonix Regular', sans-serif;
  color: white;
  text-align: center;
  display: inline-block;
  margin: 0 auto;
  font-size: clamp(3rem, 25vmin, 8rem);
}

/* Hide scrollbar for Chrome, Safari and Opera */
::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for Firefox */
html {
  scrollbar-width: none;
}

.gold-text {
  --bg-size: 400%;
  --color-one: rgb(255,214,92);
  --color-two: hsl(40 95% 55%);
  font-size: clamp(3rem, 25vmin, 8rem);
  background: linear-gradient(
      90deg,
      var(--color-one),
      var(--color-two),
      var(--color-one)
    )
    0 0 / var(--bg-size) 100%;
  color: transparent;
  background-clip: text;


  font-family: 'Azonix Regular', sans-serif;
  text-align: center;
  display: inline-block;
  margin: 0 auto;
}

@media (prefers-reduced-motion: no-preference) {
  .gold-text {
    animation: move-bg 8s linear infinite;
  }
  @keyframes move-bg {
    to {
      background-position: var(--bg-size) 0;
    }
  }
}

mat-form-field{
  width: 100%;
}
.form-container {
  color: rgb(0, 0, 0);
  display: block;
  max-width: 400px;
  margin: auto;
  margin-top: 50px;
  background: rgb(227, 226, 222);
  padding: 48px;
}

.ht-container {
  position: fixed;
  bottom: 1rem;
  right: 1rem;
  z-index: 999999;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  width: 20rem;
}

.ht-toast {
  background-color: #323232;
  color: #fff;
  padding: 1rem;
  border-radius: 0.25rem;
  margin-top: 0.5rem;
  box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.3);
  min-width: 15rem;
  max-width: 20rem;
  transition: transform 0.3s ease;
}

.ht-toast.ht-enter {
  transform: translateX(20rem);
}

.ht-toast.ht-enter-active {
  transform: translateX(0);
}

.ht-toast.ht-exit {
  transform: translateX(0);
}

.ht-toast.ht-exit-active {
  transform: translateX(20rem);
}


/**
* Generated theme by Material Theme Generator
* https://materialtheme.arcsine.dev
* Fork at: https://materialtheme.arcsine.dev/?c=YHBhbGV0dGU$YHByaW1hcnk$YF48I2ZmZDcwMCIsIj9lcjwjZmZmM2IzIiwiO2VyPCNmZmM3MDB$LCIlPmBePCM3OTc5NzkiLCI~ZXI8I2Q3ZDdkNyIsIjtlcjwjNWM1YzVjfiwid2Fybj5gXjwjZmYwMDAwIiwiP2VyPCNmZmIzYjMiLCI7ZXI8I2ZmMDAwMH4sIj9UZXh0PCMwMDAwMDAiLCI~PTwjZmFmYWZhIiwiO1RleHQ8I2ZmZmZmZiIsIjs9PCMyYzJjMmN$LCJmb250cz5bYEA8KC00fixgQDwoLTN$LGBAPCgtMn4sYEA8KC0xfixgQDxoZWFkbGluZX4sYEA8dGl0bGV$LGBAPHN1YiktMn4sYEA8c3ViKS0xfixgQDxib2R5LTJ$LGBAPGJvZHktMX4sYEA8YnV0dG9ufixgQDxjYXB0aW9ufixgQDxpbnB1dCIsInNpemU$bnVsbH1dLCJpY29uczxGaWxsZWQiLCI~bmVzcz5mYWxzZSwidmVyc2lvbj4xM30=
*/

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.

// Fonts
@import 'https://fonts.googleapis.com/icon?family=Material+Icons';
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&display=swap');

 
$fontConfig: (
  display-4: mat.define-typography-level(112px, 112px, 300, 'Roboto', -0.0134em),
  display-3: mat.define-typography-level(56px, 56px, 400, 'Roboto', -0.0089em),
  display-2: mat.define-typography-level(45px, 48px, 400, 'Roboto', 0.0000em),
  display-1: mat.define-typography-level(34px, 40px, 400, 'Roboto', 0.0074em),
  headline: mat.define-typography-level(24px, 32px, 400, 'Roboto', 0.0000em),
  title: mat.define-typography-level(20px, 32px, 500, 'Roboto', 0.0075em),
  subheading-2: mat.define-typography-level(16px, 28px, 400, 'Roboto', 0.0094em),
  subheading-1: mat.define-typography-level(15px, 24px, 500, 'Roboto', 0.0067em),
  body-2: mat.define-typography-level(14px, 24px, 500, 'Roboto', 0.0179em),
  body-1: mat.define-typography-level(14px, 20px, 400, 'Roboto', 0.0179em),
  button: mat.define-typography-level(14px, 14px, 500, 'Roboto', 0.0893em),
  caption: mat.define-typography-level(12px, 20px, 400, 'Roboto', 0.0333em),
  input: mat.define-typography-level(inherit, 1.125, 400, 'Roboto', 1.5px)
);

// Foreground Elements

// Light Theme Text
$dark-text: #000000;
$dark-primary-text: rgba($dark-text, 0.87);
$dark-accent-text: rgba($dark-primary-text, 0.54);
$dark-disabled-text: rgba($dark-primary-text, 0.38);
$dark-dividers: rgba($dark-primary-text, 0.12);
$dark-focused: rgba($dark-primary-text, 0.12);

$mat-light-theme-foreground: (
  base:              black,
  divider:           $dark-dividers,
  dividers:          $dark-dividers,
  disabled:          $dark-disabled-text,
  disabled-button:   rgba($dark-text, 0.26),
  disabled-text:     $dark-disabled-text,
  elevation:         black,
  secondary-text:    $dark-accent-text,
  hint-text:         $dark-disabled-text,
  accent-text:       $dark-accent-text,
  icon:              $dark-accent-text,
  icons:             $dark-accent-text,
  text:              $dark-primary-text,
  slider-min:        $dark-primary-text,
  slider-off:        rgba($dark-text, 0.26),
  slider-off-active: $dark-disabled-text,
);

// Dark Theme text
$light-text: #ffffff;
$light-primary-text: $light-text;
$light-accent-text: rgba($light-primary-text, 0.7);
$light-disabled-text: rgba($light-primary-text, 0.5);
$light-dividers: rgba($light-primary-text, 0.12);
$light-focused: rgba($light-primary-text, 0.12);

$mat-dark-theme-foreground: (
  base:              $light-text,
  divider:           $light-dividers,
  dividers:          $light-dividers,
  disabled:          $light-disabled-text,
  disabled-button:   rgba($light-text, 0.3),
  disabled-text:     $light-disabled-text,
  elevation:         black,
  hint-text:         $light-disabled-text,
  secondary-text:    $light-accent-text,
  accent-text:       $light-accent-text,
  icon:              $light-text,
  icons:             $light-text,
  text:              $light-text,
  slider-min:        $light-text,
  slider-off:        rgba($light-text, 0.3),
  slider-off-active: rgba($light-text, 0.3),
);

// Background config
// Light bg
$light-background:    #fafafa;
$light-bg-darker-5:   darken($light-background, 5%);
$light-bg-darker-10:  darken($light-background, 10%);
$light-bg-darker-20:  darken($light-background, 20%);
$light-bg-darker-30:  darken($light-background, 30%);
$light-bg-lighter-5:  lighten($light-background, 5%);
$dark-bg-tooltip:     lighten(#2c2c2c, 20%);
$dark-bg-alpha-4:     rgba(#2c2c2c, 0.04);
$dark-bg-alpha-12:    rgba(#2c2c2c, 0.12);

$mat-light-theme-background: (
  background:               $light-background,
  status-bar:               $light-bg-darker-20,
  app-bar:                  $light-bg-darker-5,
  hover:                    $dark-bg-alpha-4,
  card:                     $light-bg-lighter-5,
  dialog:                   $light-bg-lighter-5,
  tooltip:                  $dark-bg-tooltip,
  disabled-button:          $dark-bg-alpha-12,
  raised-button:            $light-bg-lighter-5,
  focused-button:           $dark-focused,
  selected-button:          $light-bg-darker-20,
  selected-disabled-button: $light-bg-darker-30,
  disabled-button-toggle:   $light-bg-darker-10,
  unselected-chip:          $light-bg-darker-10,
  disabled-list-option:     $light-bg-darker-10,
);

// Dark bg
$dark-background:     #2c2c2c; //sotet
$dark-bg-lighter-5:   lighten($dark-background, 5%);
$dark-bg-lighter-10:  lighten($dark-background, 10%);
$dark-bg-lighter-20:  lighten($dark-background, 20%);
$dark-bg-lighter-30:  lighten($dark-background, 30%);
$light-bg-alpha-4:    rgba(#fafafa, 0.04);
$light-bg-alpha-12:   rgba(#fafafa, 0.12);

// Background palette for dark themes.
$mat-dark-theme-background: (
  background:               transparent,
  status-bar:               $dark-bg-lighter-20,
  app-bar:                  $dark-bg-lighter-5,
  hover:                    $light-bg-alpha-4,
  card:                     $dark-bg-lighter-5,
  dialog:                   $dark-bg-lighter-5,
  tooltip:                  $dark-bg-lighter-20,
  disabled-button:          $light-bg-alpha-12,
  raised-button:            $dark-bg-lighter-5,
  focused-button:           $light-focused,
  selected-button:          $dark-bg-lighter-20,
  selected-disabled-button: $dark-bg-lighter-30,
  disabled-button-toggle:   $dark-bg-lighter-10,
  unselected-chip:          $dark-bg-lighter-20,
  disabled-list-option:     $dark-bg-lighter-10,
);

// Compute font config


// Theme Config

body {
  --primary-color: #ffd700;
  --primary-lighter-color: #fff3b3;
  --primary-darker-color: #ffc700;
  --text-primary-color: #{$dark-primary-text};
  --text-primary-lighter-color: #{$dark-primary-text};
  --text-primary-darker-color: #{$dark-primary-text};
}   
$mat-primary: (
  main: #ffd700,
  lighter: #fff3b3,
  darker: #ffc700,
  200: #ffd700, // For slide toggle,
  contrast : (
    main: $dark-primary-text,
    lighter: $dark-primary-text,
    darker: $dark-primary-text,
  )
);
$theme-primary: mat.define-palette($mat-primary, main, lighter, darker);


body {
  --accent-color: #797979;
  --accent-lighter-color: #d7d7d7;
  --accent-darker-color: #5c5c5c;
  --text-accent-color: #{$light-primary-text};
  --text-accent-lighter-color: #{$dark-primary-text};
  --text-accent-darker-color: #{$light-primary-text};
}   
$mat-accent: (
  main: #797979,
  lighter: #d7d7d7,
  darker: #5c5c5c,
  200: #797979, // For slide toggle,
  contrast : (
    main: $light-primary-text,
    lighter: $dark-primary-text,
    darker: $light-primary-text,
  )
);
$theme-accent: mat.define-palette($mat-accent, main, lighter, darker);


body {
  --warn-color: #ff0000;
  --warn-lighter-color: #ffb3b3;
  --warn-darker-color: #ff0000;
  --text-warn-color: #{$light-primary-text};
  --text-warn-lighter-color: #{$dark-primary-text};
  --text-warn-darker-color: #{$light-primary-text};
}   
$mat-warn: (
  main: #ff0000,
  lighter: #ffb3b3,
  darker: #ff0000,
  200: #ff0000, // For slide toggle,
  contrast : (
    main: $light-primary-text,
    lighter: $dark-primary-text,
    darker: $light-primary-text,
  )
);
$theme-warn: mat.define-palette($mat-warn, main, lighter, darker);
;

$theme: (
  primary: $theme-primary,
  accent: $theme-accent,
  warn: $theme-warn,
  is-dark: true,
  foreground: $mat-dark-theme-foreground,
  background: $mat-dark-theme-background,
);
$altTheme: (
  primary: $theme-primary,
  accent: $theme-accent,
  warn: $theme-warn,
  is-dark: false,
  foreground: $mat-light-theme-foreground,
  background: $mat-light-theme-background,
);

// Theme Init
@include mat.all-component-themes($theme);

.theme-alternate {
  @include mat.all-component-themes($altTheme);
}

// Specific component overrides, pieces that are not in line with the general theming

// Handle buttons appropriately, with respect to line-height
.mat-raised-button, .mat-stroked-button, .mat-flat-button {
  padding: 0 1.15em;
  margin: 0 .65em;
  min-width: 3em;
  line-height: 36.4px
}

.mat-standard-chip {
  padding: .5em .85em;
  min-height: 2.5em;
}

.material-icons {
  font-size: 24px;
  font-family: 'Material Icons', 'Material Icons';  
  .mat-badge-content {
    font-family: 'Roboto';
  }
}
